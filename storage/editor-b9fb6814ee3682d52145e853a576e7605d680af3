{"mode":"editor","version":1,"windowDimensions":{"x":4,"y":23,"width":1362,"height":745,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api"],"buffers":[{"text":"package apiresp\n\nimport (\n\t\"encoding/json\"\n\t\"net/http\"\n)\n\n// APIResponse - every api response is on this type\ntype APIResponse struct {\n\tMessage    []byte\n\tStatusCode int\n}\n\n// GenericMessageResponse - Generic message response\ntype GenericMessageResponse struct {\n\tSuccess bool               `json:\"success\"`\n\tErrors  []GenericErrorData `json:\"errors,omitempty\"`\n}\n\n// GenericErrorData - data for generic errors\ntype GenericErrorData struct {\n\tMessage string `json:\"message,omitempty\"`\n}\n\n// GenericStatusOKResponse - generic StatusBadRequest response\nfunc GenericStatusOKResponse(aur GenericMessageResponse) APIResponse {\n\tj, _ := json.Marshal(aur)\n\tar := APIResponse{Message: j, StatusCode: http.StatusOK}\n\treturn ar\n}\n\n// GenericBadRequestResponse - generic StatusBadRequest response\nfunc GenericBadRequestResponse(aur GenericMessageResponse) APIResponse {\n\tj, _ := json.Marshal(aur)\n\t// ar := APIResponse{Message: j, StatusCode: http.StatusBadRequest}\n\tar := APIResponse{Message: j, StatusCode: http.StatusOK}\n\treturn ar\n}\n","markers":{"markers":{"1":{"id":1,"range":[[16,11],[16,11]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":1445,"goalBufferRange":null},"deserializer":"Marker"},"13":{"id":13,"range":[[16,10],[16,11]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"14":{"id":14,"range":[[16,9],[16,10]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"15":{"id":15,"range":[[15,0],[16,53]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[16,9],[16,9]],"newRange":[[16,9],[16,10]],"oldText":"","newText":"[","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[16,10],[16,10]],"newRange":[[16,10],[16,11]],"oldText":"","newText":"]","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[15,0],[15,0]],"newRange":[[15,0],[16,0]],"oldText":"","newText":"\tSuccess bool               `json:\"success\"`\n","normalizeLineEndings":false,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[16,0],[17,0]],"newRange":[[16,0],[16,0]],"oldText":"\tSuccess bool             `json:\"success\"`\n","newText":"","normalizeLineEndings":false,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/apiresp/apiresponse.go","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"f1193fb5cb27096ac9e492007a6468bffef885b4","deserializer":"TextBuffer"},{"text":"package ap\n\nimport (\n\t\"code.nextbit.com.br/superwifi_api/apiresp\"\n\t\"code.nextbit.com.br/superwifi_api/models\"\n\t\"github.com/ustrajunior/authgo\"\n)\n\n// Authorization - checks if the user exists, authenticate on meraki\n// func Authorization(auth Authentication, c chan apiresp.APIResponse) {\nfunc Authorization(username, password, loginURL, userAgent string, c chan apiresp.APIResponse) {\n\tvar user models.User\n\n\t//FIXME: handle the error\n\tuser, _ = models.FindUserByEmail(username)\n\tpwSalt := authgo.PasswordSalt{Hash: user.PasswordHash, Salt: user.PasswordSalt}\n\tpwMatch := authgo.PasswordMatch(password, &pwSalt)\n\n\tvar ar apiresp.APIResponse\n\n\tif pwMatch {\n\t\tradCheck := models.LoadCreateRadCheck(username)\n\t\tmklogin := MerakiLogin(loginURL, username, radCheck.Value)\n\n\t\tif mklogin {\n\t\t\tgo models.CreateVisit(models.Visit{UserID: user.ID, UserAgent: userAgent})\n\t\t\t//TODO: Create a func to handle this\n\t\t\tcURL := \"http://www.superwifi.com.br\"\n\t\t\tar = apiresp.Authorized(apiresp.AuthResponse{Success: true, ContinueURL: cURL, User: apiresp.AuthData{UUID: user.Slug}})\n\t\t} else {\n\t\t\ta := apiresp.GenericMessageResponse{Success: false, Errors: []apiresp.GenericErrorData{apiresp.GenericErrorData{Message: \"usuário ou senha inválidos\"}}}\n\t\t\tar = apiresp.Unauthorized(a)\n\t\t}\n\t} else {\n\t\ta := apiresp.GenericMessageResponse{Success: false, Errors: []apiresp.GenericErrorData{apiresp.GenericErrorData{Message: \"usuário ou senha inválidos\"}}}\n\t\tar = apiresp.Unauthorized(a)\n\t}\n\tc <- ar\n}\n\n// ReAuthorization - checks if the user has an active session\n// if yes, then authenticate on meraki\nfunc ReAuthorization(UUID, loginURL, userAgent string, c chan apiresp.APIResponse) {\n\tvar ar apiresp.APIResponse\n\tvar mkLogin bool\n\n\tuser := models.FindUserBySlug(UUID)\n\tif user.Email != \"\" {\n\t\tradCheck := models.LoadCreateRadCheck(user.Email)\n\t\tmkLogin = MerakiLogin(loginURL, user.Email, radCheck.Value)\n\t\tif mkLogin {\n\t\t\tgo models.CreateVisit(models.Visit{UserID: user.ID, UserAgent: userAgent})\n\t\t\t//TODO: Create a func to handle this\n\t\t\tcURL := \"http://www.superwifi.com.br\"\n\t\t\tar = apiresp.Authorized(apiresp.AuthResponse{Success: true, ContinueURL: cURL, User: apiresp.AuthData{UUID: user.Slug}})\n\t\t} else {\n\t\t\ta := apiresp.GenericMessageResponse{Success: false, Errors: []apiresp.GenericErrorData{apiresp.GenericErrorData{Message: \"usuário não encontrado\"}}}\n\t\t\tar = apiresp.Unauthorized(a)\n\t\t}\n\t} else {\n\t\ta := apiresp.GenericMessageResponse{Success: false, Errors: []apiresp.GenericErrorData{apiresp.GenericErrorData{Message: \"usuário não encontrado\"}}}\n\t\tar = apiresp.Unauthorized(a)\n\t}\n\tc <- ar\n}\n","markers":{"markers":{"1":{"id":1,"range":[[60,150],[60,150]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":1449,"goalBufferRange":null},"deserializer":"Marker"},"199":{"id":199,"range":[[60,149],[60,150]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"200":{"id":200,"range":[[60,37],[60,38]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"201":{"id":201,"range":[[30,0],[30,155]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"202":{"id":202,"range":[[34,0],[34,154]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"203":{"id":203,"range":[[56,0],[56,151]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"204":{"id":204,"range":[[60,0],[60,150]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[30,63],[30,63]],"newRange":[[30,63],[30,64]],"oldText":"","newText":"{","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[30,127],[30,127]],"newRange":[[30,127],[30,128]],"oldText":"","newText":"}","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[30,63],[30,63]],"newRange":[[30,63],[30,87]],"oldText":"","newText":"apiresp.GenericErrorData","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[34,54],[34,126]]},"newParams":{"tailed":false,"range":[[34,126],[34,126]]},"deserializer":"MarkerPatch"},{"oldRange":[[34,54],[34,126]],"newRange":[[34,54],[34,152]],"oldText":"Errors: apiresp.GenericErrorData{Message: \"usuário ou senha inválidos\"}}","newText":"Errors: apiresp.GenericErrorData{apiresp.GenericErrorData{Message: \"usuário ou senha inválidos\"}}}","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[30,63],[30,63]],"newRange":[[30,63],[30,64]],"oldText":"","newText":"[","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[30,64],[30,64]],"newRange":[[30,64],[30,65]],"oldText":"","newText":"]","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[34,62],[34,62]],"newRange":[[34,62],[34,63]],"oldText":"","newText":"[","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[34,63],[34,63]],"newRange":[[34,63],[34,64]],"oldText":"","newText":"]","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[56,63],[56,63]],"newRange":[[56,63],[56,64]],"oldText":"","newText":"[","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"reversed":false,"range":[[56,64],[56,64]]},"newParams":{"reversed":true,"range":[[56,63],[56,64]]},"deserializer":"MarkerPatch"},{"oldRange":[[56,63],[56,64]],"newRange":[[56,63],[56,63]],"oldText":"[","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[56,63],[56,63]],"newRange":[[56,63],[56,64]],"oldText":"","newText":"}","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[56,64],[56,64]],"newRange":[[56,64],[56,65]],"oldText":"","newText":"{","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[56,65],[56,65]]},"newParams":{"range":[[56,64],[56,65]]},"deserializer":"MarkerPatch"},{"oldRange":[[56,64],[56,65]],"newRange":[[56,64],[56,64]],"oldText":"{","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[56,64],[56,64]]},"newParams":{"range":[[56,63],[56,64]]},"deserializer":"MarkerPatch"},{"oldRange":[[56,63],[56,64]],"newRange":[[56,63],[56,63]],"oldText":"}","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[56,63],[56,63]],"newRange":[[56,63],[56,64]],"oldText":"","newText":"{","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[56,124],[56,124]],"newRange":[[56,124],[56,125]],"oldText":"","newText":"}","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[56,63],[56,63]],"newRange":[[56,63],[56,65]],"oldText":"","newText":"[]","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"range":[[56,65],[56,65]]},"newParams":{"range":[[56,64],[56,64]]},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[56,65],[56,65]],"newRange":[[56,65],[56,89]],"oldText":"","newText":"apiresp.GenericErrorData","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[60,54],[60,122]]},"newParams":{"tailed":false,"range":[[60,122],[60,122]]},"deserializer":"MarkerPatch"},{"oldRange":[[60,54],[60,122]],"newRange":[[60,54],[60,150]],"oldText":"Errors: apiresp.GenericErrorData{Message: \"usuário não encontrado\"}}","newText":"Errors: []apiresp.GenericErrorData{apiresp.GenericErrorData{Message: \"usuário não encontrado\"}}}","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/ap/authorization.go","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"c98d93187b9c9b75c8d9221ac9165f30776ed2b6","deserializer":"TextBuffer"},{"text":"package controllers\n\nimport (\n\t\"encoding/json\"\n\t\"net/http\"\n\n\t\"code.nextbit.com.br/superwifi_api/ap\"\n\t\"code.nextbit.com.br/superwifi_api/apireq\"\n\t\"code.nextbit.com.br/superwifi_api/apiresp\"\n\t\"code.nextbit.com.br/superwifi_api/emails\"\n\t\"code.nextbit.com.br/superwifi_api/models\"\n\tlog \"github.com/Sirupsen/logrus\"\n)\n\n// FacebookLoginHandler - manage the facebook login\n// Request:\n// {\n//   user: {\n//     name: \"John Doe\",\n//     email: \"john@email.com\",\n//     gender: \"m\",\n//     BirthdateDay: \"1\",\n//     BirthdateMonth: \"1\",\n//     BirthdateYear: \"1970\",\n//     password: \"\",\n//     password_confirmation: \"\",\n//     provider: (\"facebook\"),\n//     uid: \"987654\",\n//   }\n// }\n// Respose:\n// {\n//   success: true,\n//   user: {\n//     uuid: \"1234\",\n//     required: [\n//       \"cpf\",\n//       \"phone\"\n//     ]\n//   }\n// }\n// or\n// {\n//   \"success\": true,\n//   \"continueUrl\": \"http://www.superwifi.com.br\",\n//   \"user\":{\n//     \"uuid\": \"55d40e2c-3e47-442f-a8bb-75c9a5c2ec3d\"\n//   }\n// }\n// or\n// {\n//   success: false,\n//   errors: [\n//    { name: [\"cannot be blank\", \"inform your last name\"] },\n//    { email: [\"cannot be blank\"] }\n//   ]\n// }\nfunc FacebookLoginHandler(res http.ResponseWriter, req *http.Request) {\n\tvar userJSON apireq.UserJSON\n\tvar ar apiresp.APIResponse\n\n\tif err := json.NewDecoder(req.Body).Decode(&userJSON); err != nil {\n\t\tlog.WithFields(log.Fields{\"where\": \"FacebookLoginHandler\", \"error\": \"json.NewDecoder\"}).Error(err.Error())\n\t}\n\n\tif len(userJSON.User.Email) > 0 {\n\t\tar = saveWithFB(userJSON)\n\t} else {\n\t\tar = loginWithFB(userJSON)\n\t}\n\n\tres.WriteHeader(ar.StatusCode)\n\tres.Write(ar.Message)\n}\n\nfunc loginWithFB(userJSON apireq.UserJSON) (ar apiresp.APIResponse) {\n\tfbUser := models.FindFacebookUser(userJSON.User.Provider, userJSON.User.Uid)\n\tif fbUser.ID > 0 {\n\t\tfields := models.CheckRequiredFields(fbUser)\n\t\tif fields != nil {\n\t\t\tar = apiresp.UserOKResponse(apiresp.UserResponse{Success: true, User: apiresp.AuthData{UUID: fbUser.Slug, Required: fields}})\n\t\t} else {\n\t\t\tc := make(chan apiresp.APIResponse)\n\t\t\tgo ap.ReAuthorization(fbUser.Slug, userJSON.LoginURL, userJSON.UserAgent, c)\n\t\t\tar = <-c\n\t\t}\n\t} else {\n\t\ta := apiresp.GenericMessageResponse{Success: false}\n\t\tar = apiresp.Unauthorized(a)\n\t}\n\treturn\n}\n\nfunc saveWithFB(userJSON apireq.UserJSON) (ar apiresp.APIResponse) {\n\tdbUser, err := models.FindUserByEmail(userJSON.User.Email)\n\n\tif err == nil {\n\t\tar = syncFBInfo(dbUser, userJSON.User.Provider, userJSON.User.Uid)\n\t} else {\n\t\tar = saveFBUser(userJSON)\n\t}\n\treturn\n}\n\nfunc syncFBInfo(dbUser models.User, provider, uid string) (ar apiresp.APIResponse) {\n\tsavedUser, err := models.SyncFBUser(dbUser, provider, uid)\n\n\tif err != nil {\n\t\tar = apiresp.UserNotCreated(err.Error())\n\t} else {\n\t\tar = apiresp.UserOKResponse(apiresp.UserResponse{Success: true, User: apiresp.AuthData{UUID: savedUser.Slug}})\n\t\tgo emails.SendRegistrationMail(savedUser)\n\t}\n\treturn\n}\n\nfunc saveFBUser(userJSON apireq.UserJSON) (ar apiresp.APIResponse) {\n\tuserValidation, valid := validateUser(userJSON.User)\n\tif !valid {\n\t\tar = apiresp.UserValidationResponse(userValidation)\n\t} else {\n\t\tu, err := models.CreateUser(userJSON.User)\n\t\tif err != nil {\n\t\t\tar = apiresp.UserNotCreated(err.Error())\n\t\t} else {\n\t\t\tfields := models.CheckRequiredFields(u)\n\t\t\tif fields != nil {\n\t\t\t\tar = apiresp.UserOKResponse(apiresp.UserResponse{Success: true, User: apiresp.AuthData{UUID: u.Slug, Required: fields}})\n\t\t\t} else {\n\t\t\t\tar = apiresp.UserOKResponse(apiresp.UserResponse{Success: true, User: apiresp.AuthData{UUID: u.Slug}})\n\t\t\t\tgo emails.SendRegistrationMail(u)\n\t\t\t}\n\t\t}\n\t}\n\treturn\n}\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":1453},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/controllers/facebook.go","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"6c3869789b4fbe1a529bbe6ef5f6f104bacd41a1","deserializer":"TextBuffer"},{"text":"package controllers\n\nimport (\n\t\"encoding/json\"\n\t\"net/http\"\n\n\t\"code.nextbit.com.br/superwifi_api/apiresp\"\n\t\"code.nextbit.com.br/superwifi_api/emails\"\n\t\"code.nextbit.com.br/superwifi_api/models\"\n\t\"code.nextbit.com.br/superwifi_api/utils\"\n\tlog \"github.com/Sirupsen/logrus\"\n)\n\n// AskNewPasswordHandler - Manage the request of a new password\n// Request:\n// {\n//   user: {\n//     username: \"john@email.com\"\n//   },\n//   login_url: “http://meraki.url”,\n//   user_agent: \"Iphone 4S\"\n// }\n//\n// Response:\n// {\n//   success: true,\n//   continue_url: “http://alguma.url/”\n// }\n//\n// {\n//   success: false,\n//   errors: [\n//    { username: [\"Usuario não encontrado\"] },\n//    { *message: \"token invalido\" }\n//   ]\n// }\nfunc AskNewPasswordHandler(res http.ResponseWriter, req *http.Request) {\n\tvar authentication models.Authentication\n\n\terr := json.NewDecoder(req.Body).Decode(&authentication)\n\tif err != nil {\n\t\tlog.WithFields(log.Fields{\"where\": \"AskNewPasswordHandler\", \"error\": \"json.NewDecoder\"}).Error(err.Error())\n\t}\n\n\tc := make(chan apiresp.APIResponse)\n\tgo findUserAndSendEmail(authentication, c)\n\tar := <-c\n\n\tres.WriteHeader(ar.StatusCode)\n\tres.Write(ar.Message)\n}\n\n// UpdatePasswordHandler - Receive the new password and update it\n// Request:\n// {\n//   user: {\n//     password: “123456”,\n//     password_confirmation: “123456”,\n//     token: “ajdajsdklfjalksdjfakldjfka”\n//   },\n//   user_agent: \"Iphone 4S\"\n// }\n//\n// Response:\n// {\n//   success: true\n// }\n//\n// {\n//   success: false,\n//   errors: [\n//    { password_confirmation: [\"A confirmação não bate com a senha\"] },\n//    { message: \"token invalido\" }\n//   ]\n// }\nfunc UpdatePasswordHandler(res http.ResponseWriter, req *http.Request) {\n\tvar ask apiresp.AskPassword\n\n\tif err := json.NewDecoder(req.Body).Decode(&ask); err != nil {\n\t\tlog.WithFields(log.Fields{\"where\": \"UpdatePasswordHandler\", \"error\": \"json.NewDecoder\"}).Error(err.Error())\n\t}\n\n\tc := make(chan apiresp.APIResponse)\n\tgo findUserAndUpdatePassword(ask, c)\n\tar := <-c\n\n\tres.WriteHeader(ar.StatusCode)\n\tres.Write(ar.Message)\n}\n\nfunc findUserAndSendEmail(a models.Authentication, c chan apiresp.APIResponse) {\n\tvar ar apiresp.APIResponse\n\t//FIXME: handle the error\n\tuser, _ := models.FindUserByEmail(a.User.Username)\n\tif user.Email != \"\" {\n\t\tu := user\n\t\tu.ResetPasswordToken = utils.GetMD5Hash(utils.RandString())\n\t\tu.ResetPasswordCount = u.ResetPasswordCount + 1\n\t\tupdatedUser, err := models.UpdateUser(user, u)\n\t\tif err != nil {\n\t\t\tlog.Error(err)\n\t\t}\n\t\tgo emails.SendResetPasswordMail(updatedUser)\n\t\t//TODO: cURL should came from the client\n\t\tcURL := \"http://superwifi.com.br\"\n\t\tar = apiresp.ResetPasswordResponseOK(cURL)\n\t} else {\n\t\ta := apiresp.GenericMessageResponse{Success: false, Errors: []apiresp.GenericErrorData{apiresp.GenericErrorData{Message: \"usuário não encontrado\"}}}\n\t\tar = apiresp.Unauthorized(a)\n\t}\n\tc <- ar\n}\n\nfunc findUserAndUpdatePassword(ask apiresp.AskPassword, c chan apiresp.APIResponse) {\n\tvar ar apiresp.APIResponse\n\n\tv, ar := validPassword(ask)\n\tif v {\n\t\tu := models.FindUserByPasswordToken(ask.User.ResetPasswordToken)\n\t\tif u.Email != \"\" {\n\t\t\tmodels.UpdatePassword(u, ask.User.Password)\n\t\t\ta := apiresp.GenericMessageResponse{Success: true}\n\t\t\tar = apiresp.GenericStatusOKResponse(a)\n\t\t} else {\n\t\t\tmsg := \"token inválido\"\n\t\t\ta := apiresp.GenericMessageResponse{Success: false, Errors: []apiresp.GenericErrorData{apiresp.GenericErrorData{Message: msg}}}\n\t\t\tar = apiresp.GenericBadRequestResponse(a)\n\t\t}\n\t}\n\n\tc <- ar\n}\n\nfunc validPassword(ask apiresp.AskPassword) (v bool, ar apiresp.APIResponse) {\n\tif len(ask.User.Password) >= 6 && len(ask.User.PasswordConfirmation) >= 6 {\n\t\tif ask.User.Password == ask.User.PasswordConfirmation {\n\t\t\tv = true\n\t\t} else {\n\t\t\tmsg := \"a senha não confere com a confirmação\"\n\t\t\ta := apiresp.GenericMessageResponse{Success: false, Errors: []apiresp.GenericErrorData{apiresp.GenericErrorData{Message: msg}}}\n\t\t\tar = apiresp.GenericBadRequestResponse(a)\n\t\t}\n\t} else {\n\t\tmsg := \"sua senha deve ter no mínimo 6 caracteres\"\n\t\ta := apiresp.GenericMessageResponse{Success: false, Errors: []apiresp.GenericErrorData{apiresp.GenericErrorData{Message: msg}}}\n\t\tar = apiresp.GenericBadRequestResponse(a)\n\t}\n\n\treturn\n}\n","markers":{"markers":{"1":{"id":1,"range":[[144,129],[144,129]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":1457,"goalBufferRange":null},"deserializer":"Marker"},"105":{"id":105,"range":[[144,128],[144,129]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"106":{"id":106,"range":[[144,37],[144,38]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"107":{"id":107,"range":[[107,0],[107,150]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"108":{"id":108,"range":[[125,0],[125,130]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"109":{"id":109,"range":[[139,0],[139,130]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"110":{"id":110,"range":[[144,0],[144,129]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[107,62],[107,62]],"newRange":[[107,62],[107,63]],"oldText":"","newText":"[","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[107,63],[107,63]],"newRange":[[107,63],[107,64]],"oldText":"","newText":"]","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[107,64],[107,64]],"newRange":[[107,64],[107,88]],"oldText":"","newText":"apiresp.GenericErrorData","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[107,88],[107,88]],"newRange":[[107,88],[107,89]],"oldText":"","newText":"{","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[107,149],[107,149]],"newRange":[[107,149],[107,150]],"oldText":"","newText":"}","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[125,63],[125,63]],"newRange":[[125,63],[125,64]],"oldText":"","newText":"[","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[125,64],[125,64]],"newRange":[[125,64],[125,65]],"oldText":"","newText":"]","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[125,65],[125,65]],"newRange":[[125,65],[125,89]],"oldText":"","newText":"apiresp.GenericErrorData","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[125,89],[125,89]],"newRange":[[125,89],[125,90]],"oldText":"","newText":"{","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[125,129],[125,129]],"newRange":[[125,129],[125,130]],"oldText":"","newText":"}","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[139,63],[139,63]],"newRange":[[139,63],[139,64]],"oldText":"","newText":"[","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[139,64],[139,64]],"newRange":[[139,64],[139,65]],"oldText":"","newText":"]","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[139,65],[139,65]],"newRange":[[139,65],[139,89]],"oldText":"","newText":"apiresp.GenericErrorData","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[139,89],[139,89]],"newRange":[[139,89],[139,90]],"oldText":"","newText":"{","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[139,129],[139,129]],"newRange":[[139,129],[139,130]],"oldText":"","newText":"}","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[144,62],[144,62]],"newRange":[[144,62],[144,63]],"oldText":"","newText":"[","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[144,63],[144,63]],"newRange":[[144,63],[144,64]],"oldText":"","newText":"]","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[144,64],[144,64]],"newRange":[[144,64],[144,88]],"oldText":"","newText":"apiresp.GenericErrorData","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[144,88],[144,88]],"newRange":[[144,88],[144,89]],"oldText":"","newText":"{","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[144,128],[144,128]],"newRange":[[144,128],[144,129]],"oldText":"","newText":"}","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/controllers/passwords.go","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"fd86c5051b28e9f7f397c57515297a6cebc63fc9","deserializer":"TextBuffer"},{"text":"package controllers\n\nimport (\n\t\"encoding/json\"\n\t\"net/http\"\n\n\t\"code.nextbit.com.br/superwifi_api/apiresp\"\n\t\"code.nextbit.com.br/superwifi_api/emails\"\n\t\"code.nextbit.com.br/superwifi_api/models\"\n\t\"code.nextbit.com.br/superwifi_api/validations\"\n\n\tlog \"github.com/Sirupsen/logrus\"\n\t\"github.com/gorilla/mux\"\n)\n\n// CreateUserHandler - Handler for creating new users\n// Request:\n// {\n//   user: {\n//     name: \"John Doe\",\n//     email: \"john@email.com\",\n//     gender: \"m\",\n//     BirthdateDay: \"1\",\n//     BirthdateMonth: \"1\",\n//     BirthdateYear: \"1970\",\n//     password: \"123456\",\n//     password_confirmation: \"123456\",\n//     provider: (\"facebook\" || \"\"),\n//     uid: (\"987654\" || \"\"),\n//\n//   }\n// }\n// Respose:\n// {\n//   success: true,\n//   user: {\n//     uuid: \"1234\"\n//   }\n// }\n//\n// {\n//   success: false,\n//   errors: [\n//    { name: [\"cannot be blank\", \"inform your last name\"] },\n//    { email: [\"cannot be blank\"] }\n//   ]\n// }\nfunc CreateUserHandler(res http.ResponseWriter, req *http.Request) {\n\tvar userJSON models.UserJSON\n\n\terr := json.NewDecoder(req.Body).Decode(&userJSON)\n\tif err != nil {\n\t\tlog.WithFields(log.Fields{\"where\": \"CreateUserHandler\", \"error\": \"json.NewDecoder\"}).Error(err.Error())\n\t}\n\n\tvar ar apiresp.APIResponse\n\tuser := userJSON.User\n\n\tuserValidation, valid := validateUser(user)\n\tif !valid {\n\t\tar = apiresp.UserValidationResponse(userValidation)\n\t} else {\n\t\tu, err := models.CreateUser(user)\n\t\tif err != nil {\n\t\t\tar = apiresp.UserNotCreated(err.Error())\n\t\t} else {\n\t\t\tur := apiresp.UserResponse{Success: true, User: apiresp.AuthData{UUID: u.Slug}}\n\t\t\tar = apiresp.UserCreated(ur)\n\t\t\tgo emails.SendRegistrationMail(u)\n\t\t}\n\t}\n\n\tres.WriteHeader(ar.StatusCode)\n\tres.Write(ar.Message)\n}\n\nfunc validateUser(user models.User) (userValidation apiresp.UserValidation, valid bool) {\n\terrs := validations.ValidUser(user)\n\tvalid = errs.Valid\n\tif !valid {\n\t\tvar fieldsError apiresp.FieldsError\n\t\tfieldsError.Name = errs.Name\n\t\tfieldsError.Email = errs.Email\n\t\tfieldsError.BirthdateDay = errs.BirthdateDay\n\t\tfieldsError.BirthdateMonth = errs.BirthdateMonth\n\t\tfieldsError.BirthdateYear = errs.BirthdateYear\n\t\tfieldsError.Gender = errs.Gender\n\t\tfieldsError.Password = errs.Password\n\t\tuserValidation.Errors = fieldsError\n\t}\n\n\treturn\n}\n\n// UpdateUserHandler -\nfunc UpdateUserHandler(res http.ResponseWriter, req *http.Request) {\n\tvars := mux.Vars(req)\n\tslug := vars[\"slug\"]\n\n\tvar ar apiresp.APIResponse\n\n\tuser := models.FindUserBySlug(slug)\n\n\tif user.Slug != \"\" {\n\t\tvar userJSON models.UserJSON\n\n\t\terr := json.NewDecoder(req.Body).Decode(&userJSON)\n\t\tif err != nil {\n\t\t\tlog.WithFields(log.Fields{\"where\": \"CreateUserHandler\", \"error\": \"json.NewDecoder\"}).Error(err.Error())\n\t\t}\n\n\t\t_, err = models.UpdateUser(user, userJSON.User)\n\t\tif err != nil {\n\t\t\tar = apiresp.UserNotUpdated(err.Error())\n\t\t} else {\n\t\t\tar = apiresp.UserUpdated()\n\t\t}\n\t} else {\n\t\tar = apiresp.UserNotFound()\n\t}\n\n\tres.WriteHeader(ar.StatusCode)\n\tres.Write(ar.Message)\n}\n\n// UnsubscribeHandler - delete an user\n// Request:\n// url.com/users/unsubscribe/uuid\n//\n// Response:\n// {\n//   success: true\n// }\n//\n// {\n//   success: false,\n//   errors: [\n//    { username: [\"Usuario não encontrado\"] },\n//    { message: \"ocorreu um erro\" }\n//   ]\n// }\nfunc UnsubscribeHandler(res http.ResponseWriter, req *http.Request) {\n\tvar userJSON models.UserJSON\n\n\terr := json.NewDecoder(req.Body).Decode(&userJSON)\n\tif err != nil {\n\t\tlog.WithFields(log.Fields{\"where\": \"CreateUserHandler\", \"error\": \"json.NewDecoder\"}).Error(err.Error())\n\t}\n\n\tvar ar apiresp.APIResponse\n\tuser := models.FindUserBySlugAndEmail(userJSON.User.Slug, userJSON.User.Email)\n\tif user.ID > 0 {\n\t\tdeleted := models.DeleteUser(user)\n\t\tif deleted {\n\t\t\ta := apiresp.GenericMessageResponse{Success: true}\n\t\t\tar = apiresp.GenericStatusOKResponse(a)\n\t\t} else {\n\t\t\tmsg := \"ocorreu um erro, por favor, tente novamente\"\n\t\t\ta := apiresp.GenericMessageResponse{Success: false, Errors: []apiresp.GenericErrorData{apiresp.GenericErrorData{Message: msg}}}\n\t\t\tar = apiresp.GenericBadRequestResponse(a)\n\t\t}\n\t} else {\n\t\tmsg := \"token inválido\"\n\t\ta := apiresp.GenericMessageResponse{Success: false, Errors: []apiresp.GenericErrorData{apiresp.GenericErrorData{Message: msg}}}\n\t\tar = apiresp.GenericBadRequestResponse(a)\n\t}\n\n\tres.WriteHeader(ar.StatusCode)\n\tres.Write(ar.Message)\n}\n","markers":{"markers":{"1":{"id":1,"range":[[111,29],[111,29]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":1461,"goalBufferRange":null},"deserializer":"Marker"},"45":{"id":45,"range":[[158,0],[158,130]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"46":{"id":46,"range":[[163,0],[163,129]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"47":{"id":47,"range":[[111,28],[111,29]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"48":{"id":48,"range":[[111,48],[111,49]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[158,63],[158,63]],"newRange":[[158,63],[158,64]],"oldText":"","newText":"[","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[158,64],[158,64]],"newRange":[[158,64],[158,65]],"oldText":"","newText":"]","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[158,65],[158,65]],"newRange":[[158,65],[158,89]],"oldText":"","newText":"apiresp.GenericErrorData","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[158,89],[158,89]],"newRange":[[158,89],[158,90]],"oldText":"","newText":"{","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[158,129],[158,129]],"newRange":[[158,129],[158,130]],"oldText":"","newText":"}","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[163,62],[163,62]],"newRange":[[163,62],[163,63]],"oldText":"","newText":"[","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[163,63],[163,63]],"newRange":[[163,63],[163,64]],"oldText":"","newText":"]","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[163,64],[163,64]],"newRange":[[163,64],[163,88]],"oldText":"","newText":"apiresp.GenericErrorData","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[163,88],[163,88]],"newRange":[[163,88],[163,89]],"oldText":"","newText":"{","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[163,128],[163,128]],"newRange":[[163,128],[163,129]],"oldText":"","newText":"}","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/controllers/users.go","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"17efe36e49250b7781d2e9c94fb712990b6a68cd","deserializer":"TextBuffer"},{"text":"package main\n\nimport (\n\t\"encoding/json\"\n\t\"log/syslog\"\n\t\"net/http\"\n\t\"os\"\n\n\t\"code.nextbit.com.br/superwifi_api/configs\"\n\t\"code.nextbit.com.br/superwifi_api/controllers\"\n\t\"code.nextbit.com.br/superwifi_api/server\"\n\tlog \"github.com/Sirupsen/logrus\"\n\t\"github.com/Sirupsen/logrus/hooks/syslog\"\n\t\"github.com/gorilla/mux\"\n)\n\nvar (\n\tglobalConfiguration = new(config.Configuration)\n)\n\nfunc init() {\n\tloadConfiguration()\n\n\thook, err := logrus_syslog.NewSyslogHook(\"udp\", globalConfiguration.SyslogHost+\":\"+globalConfiguration.SyslogPort, syslog.LOG_INFO, \"\")\n\tif err != nil {\n\t\tlog.WithFields(log.Fields{\"where\": \"superwifi\", \"error\": \"NewSyslogHook\"}).Error(err.Error())\n\t} else {\n\t\tlog.AddHook(hook)\n\t}\n}\n\nfunc main() {\n\trouter := mux.NewRouter()\n\n\trouter.HandleFunc(\"/v1/users/login\", addDefaultHeaders(controllers.AuthenticationHandler)).Methods(\"POST\")\n\trouter.HandleFunc(\"/v1/users/relogin\", addDefaultHeaders(controllers.ReAuthenticationHandler)).Methods(\"POST\")\n\trouter.HandleFunc(\"/v1/users/registration\", addDefaultHeaders(controllers.CreateUserHandler)).Methods(\"POST\")\n\trouter.HandleFunc(\"/v1/users/unsubscribe\", addDefaultHeaders(controllers.UnsubscribeHandler)).Methods(\"POST\")\n\trouter.HandleFunc(\"/v1/users/complete/{slug}\", addDefaultHeaders(controllers.UpdateUserHandler)).Methods(\"PATCH\")\n\trouter.HandleFunc(\"/v1/users/passwords/new\", addDefaultHeaders(controllers.AskNewPasswordHandler)).Methods(\"POST\")\n\trouter.HandleFunc(\"/v1/users/passwords\", addDefaultHeaders(controllers.UpdatePasswordHandler)).Methods(\"PATCH\")\n\trouter.HandleFunc(\"/v1/social/facebook\", addDefaultHeaders(controllers.FacebookLoginHandler)).Methods(\"POST\")\n\n\t//For Access-Control-Allow-Origin\n\trouter.HandleFunc(`/{rest:[a-zA-Z0-9=\\-\\/]+}`, allowHeaders).Methods(\"OPTIONS\")\n\n\thttp.Handle(\"/\", router)\n\n\tserver.Start(globalConfiguration, router)\n}\n\nfunc loadConfiguration() {\n\tconfigFilePath := \"configs/main.conf\"\n\n\tlog.WithFields(log.Fields{\"where\": \"superwifi\"}).Infof(\"starting %s load\", configFilePath)\n\tconfigFile, err := os.Open(configFilePath)\n\tif err != nil {\n\t\tlog.WithFields(log.Fields{\"where\": \"superwifi\", \"error\": \"os.Open(configFilePath)\"}).Error(err.Error())\n\t\tos.Exit(1)\n\t}\n\n\tconfigDecoder := json.NewDecoder(configFile)\n\terr = configDecoder.Decode(&globalConfiguration)\n\tif err != nil {\n\t\tlog.WithFields(log.Fields{\"where\": \"superwifi\", \"error\": \"configDecoder\"}).Error(err.Error())\n\t\tos.Exit(1)\n\t}\n\n\tlog.WithFields(log.Fields{\"where\": \"superwifi\"}).Infof(\"finished %s load\", configFilePath)\n}\n\nfunc allowHeaders(res http.ResponseWriter, req *http.Request) {\n\tres.Header().Set(\"Access-Control-Allow-Origin\", \"*\")\n\tres.Header().Set(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\")\n\tres.Header().Set(\"Access-Control-Allow-Methods\", \"POST, OPTIONS, PATCH, DELETE\")\n\t// res.Header().Set(\"Accept\", \"application/vnd.superwifi.net.br; version=1;\")\n}\n\nfunc addDefaultHeaders(fn http.HandlerFunc) http.HandlerFunc {\n\treturn func(w http.ResponseWriter, r *http.Request) {\n\t\tw.Header().Set(\"Content-Type\", \"application/json; charset=utf-8\")\n\t\t// w.Header().Set(\"Accept\", \"application/vnd.superwifi.net.br; version=1;\")\n\t\tw.Header().Set(\"Access-Control-Allow-Origin\", \"*\")\n\t\tfn(w, r)\n\t}\n}\n","markers":{"markers":{"1":{"id":1,"range":[[74,1],[74,1]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":1465,"goalBufferRange":null},"deserializer":"Marker"},"10":{"id":10,"range":[[74,0],[74,81]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[73,41],[73,41]]},"newParams":{"range":[[73,41],[74,0]]},"deserializer":"MarkerPatch"},{"oldRange":[[74,0],[74,0]],"newRange":[[74,0],[75,0]],"oldText":"","newText":"\tres.Header().Set(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\")\n","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"range":[[73,41],[75,0]]},"newParams":{"range":[[74,41],[74,41]]},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[74,19],[74,47]]},"newParams":{"tailed":false,"range":[[74,47],[74,47]]},"deserializer":"MarkerPatch"},{"oldRange":[[74,19],[74,47]],"newRange":[[74,19],[74,47]],"oldText":"Access-Control-Allow-Headers","newText":"Access-Control-Allow-Methods","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[74,51],[74,97]]},"newParams":{"tailed":false,"range":[[74,97],[74,97]]},"deserializer":"MarkerPatch"},{"oldRange":[[74,51],[74,97]],"newRange":[[74,51],[74,82]],"oldText":"Origin, X-Requested-With, Content-Type, Accept","newText":"POST, GET, OPTIONS, DELETE, PUT","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[74,57],[74,62]],"newRange":[[74,57],[74,57]],"oldText":"GET, ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[74,66],[74,74]],"newRange":[[74,66],[74,66]],"oldText":"DELETE, ","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[74,67],[74,69]]},"newParams":{"tailed":false,"range":[[74,69],[74,69]]},"deserializer":"MarkerPatch"},{"oldRange":[[74,67],[74,69]],"newRange":[[74,67],[74,68]],"oldText":"UT","newText":"A","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[74,68],[74,68]],"newRange":[[74,68],[74,69]],"oldText":"","newText":"T","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[74,69],[74,69]],"newRange":[[74,69],[74,70]],"oldText":"","newText":"C","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[74,70],[74,70]],"newRange":[[74,70],[74,71]],"oldText":"","newText":"H","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[74,71],[74,71]],"newRange":[[74,71],[74,72]],"oldText":"","newText":",","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[74,72],[74,72]],"newRange":[[74,72],[74,73]],"oldText":"","newText":" ","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[74,73],[74,73]],"newRange":[[74,73],[74,74]],"oldText":"","newText":"D","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[74,74],[74,74]],"newRange":[[74,74],[74,75]],"oldText":"","newText":"E","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[74,75],[74,75]],"newRange":[[74,75],[74,76]],"oldText":"","newText":"L","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[74,76],[74,76]],"newRange":[[74,76],[74,77]],"oldText":"","newText":"E","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"oldRange":[[74,77],[74,77]],"newRange":[[74,77],[74,78]],"oldText":"","newText":"T","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[74,78],[74,78]],"newRange":[[74,78],[74,79]],"oldText":"","newText":"E","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/superwifi.go","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ad909185ba57970311f9366d1f6272c9b9168aa0","deserializer":"TextBuffer"},{"text":"package apiresp\n\nimport (\n\t\"encoding/json\"\n\t\"net/http\"\n\n\tlog \"github.com/Sirupsen/logrus\"\n)\n\n// UserResponse - Struct for the complete user response\ntype UserResponse struct {\n\tSuccess bool     `json:\"success\"`\n\tUser    AuthData `json:\"user\"`\n}\n\n// UserValidation - Struct for the validation response\ntype UserValidation struct {\n\tSuccess bool        `json:\"success\"`\n\tErrors  FieldsError `json:\"errors\"`\n}\n\n// FieldsError - struct for the field error response\ntype FieldsError struct {\n\tName           []string `json:\"name,omitempty\"`\n\tEmail          []string `json:\"email,omitempty\"`\n\tBirthdateDay   []string `json:\"birthdateDay,omitempty\"`\n\tBirthdateMonth []string `json:\"birthdateMonth,omitempty\"`\n\tBirthdateYear  []string `json:\"birthdateYear,omitempty\"`\n\tGender         []string `json:\"gender,omitempty\"`\n\tPassword       []string `json:\"password,omitempty\"`\n}\n\n// UserOKResponse - When a user is ok\nfunc UserOKResponse(ur UserResponse) APIResponse {\n\tj, _ := json.Marshal(ur)\n\tar := APIResponse{Message: j, StatusCode: http.StatusOK}\n\treturn ar\n}\n\n// UserCreated - When a user is successfully created\nfunc UserCreated(ur UserResponse) APIResponse {\n\tj, err := json.Marshal(ur)\n\tif err != nil {\n\t\tlog.WithFields(log.Fields{\"where\": \"UserCreated\", \"error\": \"json.Marshal\"}).Error(err.Error())\n\t\treturn UserNotCreated(\"user could not be created\")\n\t}\n\tar := APIResponse{Message: j, StatusCode: http.StatusOK}\n\treturn ar\n}\n\n// UserUpdated - When a user is successfully updated\nfunc UserUpdated() APIResponse {\n\tj, err := json.Marshal(map[string]string{\"success\": \"true\"})\n\tif err != nil {\n\t\tlog.WithFields(log.Fields{\"where\": \"UserUpdated\", \"error\": \"json.Marshal\"}).Error(err.Error())\n\t\treturn UserNotUpdated(\"user could not be updated\")\n\t}\n\tar := APIResponse{Message: j, StatusCode: http.StatusOK}\n\treturn ar\n}\n\n// UserNotUpdated - When a user is not successfully update\nfunc UserNotUpdated(msg string) APIResponse {\n\tj, err := json.Marshal(map[string]string{\"success\": \"false\", \"message\": msg})\n\tif err != nil {\n\t\tlog.WithFields(log.Fields{\"where\": \"auth\", \"error\": \"json.Marshal\"}).Error(err.Error())\n\t}\n\t// ar := APIResponse{Message: j, StatusCode: http.StatusUnauthorized}\n\tar := APIResponse{Message: j, StatusCode: http.StatusOK}\n\treturn ar\n}\n\n// UserNotCreated - When a user is not successfully created\nfunc UserNotCreated(msg string) APIResponse {\n\tj, err := json.Marshal(map[string]string{\"created\": \"false\", \"message\": msg})\n\tif err != nil {\n\t\tlog.WithFields(log.Fields{\"where\": \"auth\", \"error\": \"json.Marshal\"}).Error(err.Error())\n\t}\n\t// ar := APIResponse{Message: j, StatusCode: http.StatusUnauthorized}\n\tar := APIResponse{Message: j, StatusCode: http.StatusOK}\n\treturn ar\n}\n\n// UserNotFound - When a user is not found\nfunc UserNotFound() APIResponse {\n\tj, err := json.Marshal(map[string]string{\"error\": \"user not found\"})\n\tif err != nil {\n\t\tlog.WithFields(log.Fields{\"where\": \"UserUpdated\", \"error\": \"json.Marshal\"}).Error(err.Error())\n\t\treturn UserNotUpdated(\"user could not be updated\")\n\t}\n\t// ar := APIResponse{Message: j, StatusCode: http.StatusNotFound}\n\tar := APIResponse{Message: j, StatusCode: http.StatusOK}\n\treturn ar\n}\n\n// UserValidationResponse - When a user is not valid\nfunc UserValidationResponse(errs UserValidation) APIResponse {\n\terrs.Success = false\n\tj, _ := json.Marshal(errs)\n\t// ar := APIResponse{Message: j, StatusCode: http.StatusBadRequest}\n\tar := APIResponse{Message: j, StatusCode: http.StatusOK}\n\treturn ar\n}\n","markers":{"markers":{"1":{"id":1,"range":[[12,29],[12,29]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":1469,"goalBufferRange":null,"autoscroll":true},"deserializer":"Marker"},"3":{"id":3,"range":[[52,0],[52,61]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"4":{"id":4,"range":[[63,0],[63,78]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[52,43],[52,50]]},"newParams":{"tailed":false,"range":[[52,50],[52,50]]},"deserializer":"MarkerPatch"},{"oldRange":[[52,43],[52,50]],"newRange":[[52,43],[52,44]],"oldText":"updated","newText":"s","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[52,44],[52,44]],"newRange":[[52,44],[52,45]],"oldText":"","newText":"u","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[52,45],[52,45]],"newRange":[[52,45],[52,46]],"oldText":"","newText":"c","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[52,46],[52,46]],"newRange":[[52,46],[52,47]],"oldText":"","newText":"c","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[52,47],[52,47]],"newRange":[[52,47],[52,48]],"oldText":"","newText":"e","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[52,48],[52,48]],"newRange":[[52,48],[52,49]],"oldText":"","newText":"s","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[52,49],[52,49]],"newRange":[[52,49],[52,50]],"oldText":"","newText":"s","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"},{"patches":[{"id":1,"oldParams":{"tailed":true,"range":[[63,43],[63,50]]},"newParams":{"tailed":false,"range":[[63,50],[63,50]]},"deserializer":"MarkerPatch"},{"oldRange":[[63,43],[63,50]],"newRange":[[63,43],[63,44]],"oldText":"updated","newText":"s","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[63,44],[63,44]],"newRange":[[63,44],[63,45]],"oldText":"","newText":"u","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[63,45],[63,45]],"newRange":[[63,45],[63,46]],"oldText":"","newText":"c","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[63,46],[63,46]],"newRange":[[63,46],[63,47]],"oldText":"","newText":"e","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[63,47],[63,47]],"newRange":[[63,47],[63,48]],"oldText":"","newText":"s","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"reversed":false,"range":[[63,48],[63,48]]},"newParams":{"reversed":true,"range":[[63,47],[63,48]]},"deserializer":"MarkerPatch"},{"oldRange":[[63,47],[63,48]],"newRange":[[63,47],[63,47]],"oldText":"s","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"tailed":false},"newParams":{"tailed":true},"deserializer":"MarkerPatch"},{"id":1,"oldParams":{"range":[[63,47],[63,47]]},"newParams":{"range":[[63,46],[63,47]]},"deserializer":"MarkerPatch"},{"oldRange":[[63,46],[63,47]],"newRange":[[63,46],[63,46]],"oldText":"e","newText":"","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"id":1,"oldParams":{"tailed":true},"newParams":{"tailed":false},"deserializer":"MarkerPatch"},{"oldRange":[[63,46],[63,46]],"newRange":[[63,46],[63,47]],"oldText":"","newText":"c","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[63,47],[63,47]],"newRange":[[63,47],[63,48]],"oldText":"","newText":"e","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[63,48],[63,48]],"newRange":[[63,48],[63,49]],"oldText":"","newText":"s","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"},{"oldRange":[[63,49],[63,49]],"newRange":[[63,49],[63,50]],"oldText":"","newText":"s","normalizeLineEndings":true,"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/apiresp/user.go","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"688ad634ee828958ba1bfe8f65f5650ff6632d48","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":1445,"softTabs":false,"displayBuffer":{"id":1446,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/apiresp/apiresponse.go","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":1449,"softTabs":false,"displayBuffer":{"id":1450,"softWrapped":true,"editorWidthInChars":null,"scrollTop":859,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/ap/authorization.go","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":1453,"softTabs":false,"displayBuffer":{"id":1454,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/controllers/facebook.go","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":1457,"softTabs":false,"displayBuffer":{"id":1458,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/controllers/passwords.go","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":1461,"softTabs":false,"displayBuffer":{"id":1462,"softWrapped":true,"editorWidthInChars":null,"scrollTop":1870,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/controllers/users.go","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":1469,"softTabs":false,"displayBuffer":{"id":1470,"softWrapped":true,"editorWidthInChars":null,"scrollTop":240,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/apiresp/user.go","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":1465,"softTabs":false,"displayBuffer":{"id":1466,"softWrapped":true,"editorWidthInChars":null,"scrollTop":1141,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/superwifi.go","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/controllers/users.go","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-go","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/apiresp/apiresponse.go":1426101646844,"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/ap/authorization.go":1426101683359,"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/controllers/facebook.go":1426101899359,"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/controllers/passwords.go":1426101899917,"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/controllers/users.go":1426103188141,"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/apiresp/user.go":1426102637039,"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/superwifi.go":1426102281121},"keybinding-resolver":{},"metrics":{"sessionLength":73659255},"tree-view":{"directoryExpansionStates":{"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"ap":{"isExpanded":true,"entries":{}},"apireq":{"isExpanded":false,"entries":{}},"apiresp":{"isExpanded":true,"entries":{}},"configs":{"isExpanded":false,"entries":{}},"controllers":{"isExpanded":true,"entries":{}},"emails":{"isExpanded":false,"entries":{}},"Godeps":{"isExpanded":false,"entries":{}},"models":{"isExpanded":false,"entries":{}},"scripts":{"isExpanded":false,"entries":{}},"server":{"isExpanded":false,"entries":{}},"utils":{"isExpanded":true,"entries":{}},"validations":{"isExpanded":true,"entries":{}}}}},"selectedPath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/superwifi_api/controllers/users.go","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["ErrMsg","ApiResponse","ClearUsers","WriteHeader","GenericMessageResponse","MerakiLogin","SendRegistrationMail","auth","UserJSON","apiresp","checkRequiredFields","Authorization","FindUserByEmail","FindFacebookUser","CreateUser","GenericMessageResponse","apiresp.GenericMessageResponse{Success: false, Errors: apiresp.GenericErrorData{Message: \"usuário não encontrado\"}}","StatusBadRequest","http.Status","Unauthorized","UserValidationResponse","userValidation","validateUser","AuthData","CheckRequiredFields"],"replaceHistory":["BirthdateMonth","BirthdateYear","empty","user","APIResponse"],"pathsHistory":["BirthdateMonth","BirthdateYear","empty","user","APIResponse"]},"todo-list":{}}}