{"mode":"editor","version":1,"windowDimensions":{"x":4,"y":23,"width":1362,"height":745,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/ustrajunior/Downloads/basic"],"buffers":[{"text":"{\n  \"name\": \"My Bookmarks\",\n  \"version\": \"1.1\",\n  \"description\": \"A browser action with a popup dump of all bookmarks, including search, add, edit and delete.\",\n  \"permissions\": [\n    \"bookmarks\"\n  ],\n  \"browser_action\": {\n      \"default_title\": \"My Bookmarks\",\n      \"default_icon\": \"icon.png\",\n      \"default_popup\": \"popup.html\"\n  },\n  \"manifest_version\": 2,\n  \"content_security_policy\": \"script-src 'self' https://ajax.googleapis.com; object-src 'self'\"\n}\n","markers":{"markers":{"1":{"id":1,"range":[[8,38],[8,38]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":4,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/Downloads/basic/manifest.json","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"2c35d912f080ee450df59ede1a5d2021a138d2bd","deserializer":"TextBuffer"},{"text":"// Copyright (c) 2012 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n// Search the bookmarks when entering the search keyword.\n$(function() {\n  $('#search').change(function() {\n     $('#bookmarks').empty();\n     dumpBookmarks($('#search').val());\n  });\n});\n// Traverse the bookmark tree, and print the folder and nodes.\nfunction dumpBookmarks(query) {\n  var bookmarkTreeNodes = chrome.bookmarks.getTree(\n    function(bookmarkTreeNodes) {\n      $('#bookmarks').append(dumpTreeNodes(bookmarkTreeNodes, query));\n    });\n}\nfunction dumpTreeNodes(bookmarkNodes, query) {\n  var list = $('<ul>');\n  var i;\n  for (i = 0; i < bookmarkNodes.length; i++) {\n    list.append(dumpNode(bookmarkNodes[i], query));\n  }\n  return list;\n}\nfunction dumpNode(bookmarkNode, query) {\n  if (bookmarkNode.title) {\n    if (query && !bookmarkNode.children) {\n      if (String(bookmarkNode.title).indexOf(query) == -1) {\n        return $('<span></span>');\n      }\n    }\n    var anchor = $('<a>');\n    anchor.attr('href', bookmarkNode.url);\n    anchor.text(bookmarkNode.title);\n    /*\n     * When clicking on a bookmark in the extension, a new tab is fired with\n     * the bookmark url.\n     */\n    anchor.click(function() {\n      chrome.tabs.create({url: bookmarkNode.url});\n    });\n    var span = $('<span>');\n    var options = bookmarkNode.children ?\n      $('<span>[<a href=\"#\" id=\"addlink\">Add</a>]</span>') :\n      $('<span>[<a id=\"editlink\" href=\"#\">Edit</a> <a id=\"deletelink\" ' +\n        'href=\"#\">Delete</a>]</span>');\n    var edit = bookmarkNode.children ? $('<table><tr><td>Name</td><td>' +\n      '<input id=\"title\"></td></tr><tr><td>URL</td><td><input id=\"url\">' +\n      '</td></tr></table>') : $('<input>');\n    // Show add and edit links when hover over.\n        span.hover(function() {\n        span.append(options);\n        $('#deletelink').click(function() {\n          $('#deletedialog').empty().dialog({\n                 autoOpen: false,\n                 title: 'Confirm Deletion',\n                 resizable: false,\n                 height: 140,\n                 modal: true,\n                 overlay: {\n                   backgroundColor: '#000',\n                   opacity: 0.5\n                 },\n                 buttons: {\n                   'Yes, Delete It!': function() {\n                      chrome.bookmarks.remove(String(bookmarkNode.id));\n                      span.parent().remove();\n                      $(this).dialog('destroy');\n                    },\n                    Cancel: function() {\n                      $(this).dialog('destroy');\n                    }\n                 }\n               }).dialog('open');\n         });\n        $('#addlink').click(function() {\n          $('#adddialog').empty().append(edit).dialog({autoOpen: false,\n            closeOnEscape: true, title: 'Add New Bookmark', modal: true,\n            buttons: {\n            'Add' : function() {\n               chrome.bookmarks.create({parentId: bookmarkNode.id,\n                 title: $('#title').val(), url: $('#url').val()});\n               $('#bookmarks').empty();\n               $(this).dialog('destroy');\n               window.dumpBookmarks();\n             },\n            'Cancel': function() {\n               $(this).dialog('destroy');\n            }\n          }}).dialog('open');\n        });\n        $('#editlink').click(function() {\n         edit.val(anchor.text());\n         $('#editdialog').empty().append(edit).dialog({autoOpen: false,\n           closeOnEscape: true, title: 'Edit Title', modal: true,\n           show: 'slide', buttons: {\n              'Save': function() {\n                 chrome.bookmarks.update(String(bookmarkNode.id), {\n                   title: edit.val()\n                 });\n                 anchor.text(edit.val());\n                 options.show();\n                 $(this).dialog('destroy');\n              },\n             'Cancel': function() {\n                 $(this).dialog('destroy');\n             }\n         }}).dialog('open');\n        });\n        options.fadeIn();\n      },\n      // unhover\n      function() {\n        options.remove();\n      }).append(anchor);\n  }\n  var li = $(bookmarkNode.title ? '<li>' : '<div>').append(span);\n  if (bookmarkNode.children && bookmarkNode.children.length > 0) {\n    li.append(dumpTreeNodes(bookmarkNode.children, query));\n  }\n  return li;\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  dumpBookmarks();\n});\n","markers":{"markers":{"1":{"id":1,"range":[[116,24],[116,24]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":12,"goalBufferRange":null,"autoscroll":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/Downloads/basic/popup.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"88dcf577eda26d647afe846babd9b0b7d51bfdea","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":4,"softTabs":true,"displayBuffer":{"id":5,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/Downloads/basic/manifest.json","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":12,"softTabs":true,"displayBuffer":{"id":13,"softWrapped":false,"editorWidthInChars":null,"scrollTop":2154,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/Downloads/basic/popup.js","invisibles":null,"deserializer":"TokenizedBuffer"},"invisibles":null,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/ustrajunior/Downloads/basic/manifest.json","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-json","language-javascript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["chrome","dumpBookmarks"],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"/Users/ustrajunior/Downloads/basic/manifest.json":1424809825285,"/Users/ustrajunior/Downloads/basic/popup.js":1424809806273},"keybinding-resolver":{},"metrics":{"sessionLength":1499893},"tree-view":{"directoryExpansionStates":[{}],"selectedPath":"/Users/ustrajunior/Downloads/basic/manifest.json","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}