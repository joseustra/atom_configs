{"mode":"editor","version":1,"windowDimensions":{"x":4,"y":23,"width":1362,"height":745,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/ustrajunior/code/ustrajunior/todos"],"buffers":[{"text":"App.info({\n  name: 'Todos',\n  description: 'A simple todo list app built in Meteor.',\n  author: 'Percolate Studio Team',\n  email: 'us@percolatestudio.com',\n  website: 'http://percolatestudio.com',\n  version: '0.0.1'\n});\n\nApp.icons({\n  // iOS\n  'iphone': 'resources/icons/icon-60x60.png',\n  'iphone_2x': 'resources/icons/icon-60x60@2x.png',\n  'ipad': 'resources/icons/icon-72x72.png',\n  'ipad_2x': 'resources/icons/icon-72x72@2x.png',\n\n  // Android\n  'android_ldpi': 'resources/icons/icon-36x36.png',\n  'android_mdpi': 'resources/icons/icon-48x48.png',\n  'android_hdpi': 'resources/icons/icon-72x72.png',\n  'android_xhdpi': 'resources/icons/icon-96x96.png'\n});\n\nApp.launchScreens({\n  // iOS\n  'iphone': 'resources/splash/splash-320x480.png',\n  'iphone_2x': 'resources/splash/splash-320x480@2x.png',\n  'iphone5': 'resources/splash/splash-320x568@2x.png',\n  'ipad_portrait': 'resources/splash/splash-768x1024.png',\n  'ipad_portrait_2x': 'resources/splash/splash-768x1024@2x.png',\n  'ipad_landscape': 'resources/splash/splash-1024x768.png',\n  'ipad_landscape_2x': 'resources/splash/splash-1024x768@2x.png',\n\n  // Android\n  'android_ldpi_portrait': 'resources/splash/splash-200x320.png',\n  'android_ldpi_landscape': 'resources/splash/splash-320x200.png',\n  'android_mdpi_portrait': 'resources/splash/splash-320x480.png',\n  'android_mdpi_landscape': 'resources/splash/splash-480x320.png',\n  'android_hdpi_portrait': 'resources/splash/splash-480x800.png',\n  'android_hdpi_landscape': 'resources/splash/splash-800x480.png',\n  'android_xhdpi_portrait': 'resources/splash/splash-720x1280.png',\n  'android_xhdpi_landscape': 'resources/splash/splash-1280x720.png'\n});\n\nApp.setPreference('StatusBarOverlaysWebView', 'false');\nApp.setPreference('StatusBarBackgroundColor', '#000000');\n\n","markers":{"markers":{"1":{"id":1,"range":[[8,0],[8,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":4,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/ustrajunior/todos/mobile-config.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"a6ffc20fd8c81a8f4c0985280cac07f871439a74","deserializer":"TextBuffer"},{"text":"Meteor.publish('publicLists', function() {\n  return Lists.find({userId: {$exists: false}});\n});\n\nMeteor.publish('privateLists', function() {\n  if (this.userId) {\n    return Lists.find({userId: this.userId});\n  } else {\n    this.ready();\n  }\n});\n\nMeteor.publish('todos', function(listId) {\n  check(listId, String);\n\n  return Todos.find({listId: listId});\n});\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":8,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/ustrajunior/todos/server/publish.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"3b9fa26c41250b6026a66be1b7d24939a13eeea9","deserializer":"TextBuffer"},{"text":"// if the database is empty on server start, create some sample data.\nMeteor.startup(function () {\n  if (Lists.find().count() === 0) {\n    var data = [\n      {name: \"Meteor Principles\",\n       items: [\"Data on the Wire\",\n         \"One Language\",\n         \"Database Everywhere\",\n         \"Latency Compensation\",\n         \"Full Stack Reactivity\",\n         \"Embrace the Ecosystem\",\n         \"Simplicity Equals Productivity\"\n       ]\n      },\n      {name: \"Languages\",\n       items: [\"Lisp\",\n         \"C\",\n         \"C++\",\n         \"Python\",\n         \"Ruby\",\n         \"JavaScript\",\n         \"Scala\",\n         \"Erlang\",\n         \"6502 Assembly\"\n         ]\n      },\n      {name: \"Favorite Scientists\",\n       items: [\"Ada Lovelace\",\n         \"Grace Hopper\",\n         \"Marie Curie\",\n         \"Carl Friedrich Gauss\",\n         \"Nikola Tesla\",\n         \"Claude Shannon\"\n       ]\n      }\n    ];\n\n    var timestamp = (new Date()).getTime();\n    _.each(data, function(list) {\n      var list_id = Lists.insert({name: list.name,\n        incompleteCount: list.items.length});\n\n      _.each(list.items, function(text) {\n        Todos.insert({listId: list_id,\n                      text: text,\n                      createdAt: new Date(timestamp)});\n        timestamp += 1; // ensure unique timestamp.\n      });\n    });\n  }\n});\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":12,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/ustrajunior/todos/server/bootstrap.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"fcb7c0e4703e7f839421c7ec6ecbe30fa6ffed5e","deserializer":"TextBuffer"},{"text":"Lists = new Mongo.Collection('lists');\n\n// Calculate a default name for a list in the form of 'List A'\nLists.defaultName = function() {\n  var nextLetter = 'A', nextName = 'List ' + nextLetter;\n  while (Lists.findOne({name: nextName})) {\n    // not going to be too smart here, can go past Z\n    nextLetter = String.fromCharCode(nextLetter.charCodeAt(0) + 1);\n    nextName = 'List ' + nextLetter;\n  }\n\n  return nextName;\n};\n\nTodos = new Mongo.Collection('todos');\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":16,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/ustrajunior/todos/lib/collections.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"7658fe6854e323ff4f3c5e0eba6196fdba14bf82","deserializer":"TextBuffer"},{"text":"<head>\n  <meta charset=\"utf-8\">\n  <title>Todos - All your todos synced wherever you happen to be</title>\n  <meta name=\"description\" content=\"The simple todo list that keeps your todos in sync everywhere free forever. Todo is open source and powered by Meteor.\">\n  <meta name=\"viewport\" content=\"user-scalable=no, initial-scale=1, minimal-ui, maximum-scale=1, minimum-scale=1\" />\n  <link rel=\"shortcut icon\" type=\"image/png\" href=\"favicon.png?v1\" sizes=\"16x16 32x32 64x64\">\n  <link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"apple-touch-icon-precomposed.png\">\n</head>","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":20,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"},"2":{"id":2,"range":[[0,1],[0,5]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"3":{"id":3,"range":[[7,2],[7,6]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/ustrajunior/todos/client/head.html","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ae1eed8e3426f56e350199fd9549199fde2fe2d0","deserializer":"TextBuffer"},{"text":"var EDITING_KEY = 'EDITING_TODO_ID';\n\nTemplate.todosItem.helpers({\n  checkedClass: function() {\n    return this.checked && 'checked';\n  },\n  editingClass: function() {\n    return Session.equals(EDITING_KEY, this._id) && 'editing';\n  }\n});\n\nTemplate.todosItem.events({\n  'change [type=checkbox]': function(event) {\n    var checked = $(event.target).is(':checked');\n    Todos.update(this._id, {$set: {checked: checked}});\n    Lists.update(this.listId, {$inc: {incompleteCount: checked ? -1 : 1}});\n  },\n  \n  'focus input[type=text]': function(event) {\n    Session.set(EDITING_KEY, this._id);\n  },\n  \n  'blur input[type=text]': function(event) {\n    if (Session.equals(EDITING_KEY, this._id))\n      Session.set(EDITING_KEY, null);\n  },\n  \n  'keydown input[type=text]': function(event) {\n    // ESC or ENTER\n    if (event.which === 27 || event.which === 13) {\n      event.preventDefault();\n      event.target.blur();\n    }\n  },\n  \n  // update the text of the item on keypress but throttle the event to ensure\n  // we don't flood the server with updates (handles the event at most once \n  // every 300ms)\n  'keyup input[type=text]': _.throttle(function(event) {\n    Todos.update(this._id, {$set: {text: event.target.value}});\n  }, 300),\n  \n  // handle mousedown otherwise the blur handler above will swallow the click\n  // on iOS, we still require the click event so handle both\n  'mousedown .js-delete-item, click .js-delete-item': function() {\n    Todos.remove(this._id);\n    if (! this.checked)\n      Lists.update(this.listId, {$inc: {incompleteCount: -1}});\n  }\n});","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":24,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/ustrajunior/todos/client/templates/todos-item.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"e5b8fc91e8f8b9c693ae1e3ea9daba5555fe2d3a","deserializer":"TextBuffer"},{"text":"<template name=\"todosItem\">\n  <div class=\"list-item {{checkedClass}} {{editingClass}}\">\n    <label class=\"checkbox\">\n      <input type=\"checkbox\" checked=\"{{checked}}\" name=\"checked\">\n      <span class=\"checkbox-custom\"></span>\n    </label>\n\n    <input type=\"text\" value=\"{{text}}\" placeholder=\"Task name\">\n    <a class=\"js-delete-item delete-item\" href=\"#\"><span class=\"icon-trash\"></span></a>\n  </div>\n</template>","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":28,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"},"2":{"id":2,"range":[[0,1],[0,9]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"3":{"id":3,"range":[[10,2],[10,10]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/ustrajunior/todos/client/templates/todos-item.html","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"ff583eeb8e31f1cfeb3096f8228c52737b371db4","deserializer":"TextBuffer"},{"text":"<template name=\"appBody\">\n  <div id=\"container\" class=\"{{menuOpen}} {{cordova}}\">\n\n    <section id=\"menu\">\n      {{#if currentUser}}\n        <div class=\"btns-group-vertical\">\n          <a href=\"#\" class=\"js-user-menu btn-secondary\">\n            {{#if userMenuOpen}}\n              <span class=\"icon-arrow-up\"></span>\n              {{else}}\n              <span class=\"icon-arrow-down\"></span>\n            {{/if}}\n            {{emailLocalPart}}\n          </a>\n          {{#if userMenuOpen}}\n            <a class=\"js-logout btn-secondary\">Logout</a>\n          {{/if}}\n        </div>\n      {{else}}\n        <div class=\"btns-group\">\n          <a href=\"{{pathFor 'signin'}}\" class=\"btn-secondary\">Sign In</a>\n          <a href=\"{{pathFor 'join'}}\" class=\"btn-secondary\">Join</a>\n        </div>\n      {{/if}}\n\n      <div class=\"list-todos\">\n        <a class=\"js-new-list link-list-new\"><span class=\"icon-plus\"></span>New List</a>\n\n        {{#each lists}}\n          <a href=\"{{pathFor 'listsShow'}}\" class=\"list-todo {{activeListClass}}\" title=\"{{name}}\">\n            {{#if userId}}\n              <span class=\"icon-lock\"></span>\n            {{/if}}\n            {{#if incompleteCount}}\n              <span class=\"count-list\">{{incompleteCount}}</span>\n            {{/if}}\n            {{name}}\n          </a>\n        {{/each}}\n\n      </div>\n    </section>\n\n    {{#unless connected}}\n      <div class=\"notifications\">\n        <div class=\"notification\">\n          <span class=\"icon-sync\"></span>\n          <div class=\"meta\">\n            <div class=\"title-notification\">Trying to connect</div>\n            <div class=\"description\">There seems to be a connection issue</div>\n          </div>\n        </div>\n      </div>\n    {{/unless}}\n\n    <div class=\"content-overlay\"></div>\n\n    <div id=\"content-container\">\n      {{#each thisArray}}\n        {{> yield}}\n      {{/each}}\n    </div>\n  </div>\n</template>","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":32,"preserveFolds":true,"goalBufferRange":null},"deserializer":"Marker"},"4":{"id":4,"range":[[0,1],[0,9]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"5":{"id":5,"range":[[63,2],[63,10]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"10":{"id":10,"range":[[0,1],[0,9]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"11":{"id":11,"range":[[63,2],[63,10]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/ustrajunior/todos/client/templates/app-body.html","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"bcdecbb3daf48bffa9dade22cd1a83d8e400f9a5","deserializer":"TextBuffer"},{"text":"var MENU_KEY = 'menuOpen';\nSession.setDefault(MENU_KEY, false);\n\nvar USER_MENU_KEY = 'userMenuOpen';\nSession.setDefault(USER_MENU_KEY, false);\n\nvar SHOW_CONNECTION_ISSUE_KEY = 'showConnectionIssue';\nSession.setDefault(SHOW_CONNECTION_ISSUE_KEY, false);\n\nvar CONNECTION_ISSUE_TIMEOUT = 5000;\n\nMeteor.startup(function () {\n  // set up a swipe left / right handler\n  $(document.body).touchwipe({\n    wipeLeft: function () {\n      Session.set(MENU_KEY, false);\n    },\n    wipeRight: function () {\n      Session.set(MENU_KEY, true);\n    },\n    preventDefaultEvents: false\n  });\n\n  // Only show the connection error box if it has been 5 seconds since\n  // the app started\n  setTimeout(function () {\n    // Launch screen handle created in lib/router.js\n    dataReadyHold.release();\n\n    // Show the connection error box\n    Session.set(SHOW_CONNECTION_ISSUE_KEY, true);\n  }, CONNECTION_ISSUE_TIMEOUT);\n});\n\nTemplate.appBody.onRendered(function() {\n  this.find('#content-container')._uihooks = {\n    insertElement: function(node, next) {\n      $(node)\n        .hide()\n        .insertBefore(next)\n        .fadeIn(function () {\n          listFadeInHold.release();\n        });\n    },\n    removeElement: function(node) {\n      $(node).fadeOut(function() {\n        $(this).remove();\n      });\n    }\n  };\n});\n\nTemplate.appBody.helpers({\n  // We use #each on an array of one item so that the \"list\" template is\n  // removed and a new copy is added when changing lists, which is\n  // important for animation purposes. #each looks at the _id property of it's\n  // items to know when to insert a new item and when to update an old one.\n  thisArray: function() {\n    return [this];\n  },\n  menuOpen: function() {\n    return Session.get(MENU_KEY) && 'menu-open';\n  },\n  cordova: function() {\n    return Meteor.isCordova && 'cordova';\n  },\n  emailLocalPart: function() {\n    var email = Meteor.user().emails[0].address;\n    return email.substring(0, email.indexOf('@'));\n  },\n  userMenuOpen: function() {\n    return Session.get(USER_MENU_KEY);\n  },\n  lists: function() {\n    return Lists.find();\n  },\n  activeListClass: function() {\n    var current = Router.current();\n    if (current.route.name === 'listsShow' && current.params._id === this._id) {\n      return 'active';\n    }\n  },\n  connected: function() {\n    if (Session.get(SHOW_CONNECTION_ISSUE_KEY)) {\n      return Meteor.status().connected;\n    } else {\n      return true;\n    }\n  }\n});\n\nTemplate.appBody.events({\n  'click .js-menu': function() {\n    Session.set(MENU_KEY, ! Session.get(MENU_KEY));\n  },\n\n  'click .content-overlay': function(event) {\n    Session.set(MENU_KEY, false);\n    event.preventDefault();\n  },\n\n  'click .js-user-menu': function(event) {\n    Session.set(USER_MENU_KEY, ! Session.get(USER_MENU_KEY));\n    // stop the menu from closing\n    event.stopImmediatePropagation();\n  },\n\n  'click #menu a': function() {\n    Session.set(MENU_KEY, false);\n  },\n\n  'click .js-logout': function() {\n    Meteor.logout();\n    \n    // if we are on a private list, we'll need to go to a public one\n    var current = Router.current();\n    if (current.route.name === 'listsShow' && current.data().userId) {\n      Router.go('listsShow', Lists.findOne({userId: {$exists: false}}));\n    }\n  },\n\n  'click .js-new-list': function() {\n    var list = {name: Lists.defaultName(), incompleteCount: 0};\n    list._id = Lists.insert(list);\n\n    Router.go('listsShow', list);\n  }\n});\n","markers":{"markers":{"1":{"id":1,"range":[[61,46],[61,46]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":38,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"/Users/ustrajunior/code/ustrajunior/todos/client/templates/app-body.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"cc480facf96cb9ea98bc169bc42ed264947cae02","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":4,"softTabs":true,"displayBuffer":{"id":5,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/ustrajunior/todos/mobile-config.js","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":8,"softTabs":true,"displayBuffer":{"id":9,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/ustrajunior/todos/server/publish.js","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":12,"softTabs":true,"displayBuffer":{"id":13,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/ustrajunior/todos/server/bootstrap.js","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":16,"softTabs":true,"displayBuffer":{"id":17,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/ustrajunior/todos/lib/collections.js","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":20,"softTabs":true,"displayBuffer":{"id":21,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/ustrajunior/todos/client/head.html","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":24,"softTabs":true,"displayBuffer":{"id":25,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/ustrajunior/todos/client/templates/todos-item.js","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":28,"softTabs":true,"displayBuffer":{"id":29,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/ustrajunior/todos/client/templates/todos-item.html","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":32,"softTabs":true,"displayBuffer":{"id":33,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/ustrajunior/todos/client/templates/app-body.html","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":38,"softTabs":true,"displayBuffer":{"id":39,"softWrapped":true,"editorWidthInChars":null,"scrollTop":2044,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/ustrajunior/todos/client/templates/app-body.js","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/ustrajunior/code/ustrajunior/todos/client/templates/app-body.js","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-javascript","language-html","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/ustrajunior/code/ustrajunior/todos/mobile-config.js":1426781628072,"/Users/ustrajunior/code/ustrajunior/todos/server/publish.js":1426781334353,"/Users/ustrajunior/code/ustrajunior/todos/server/bootstrap.js":1426781341251,"/Users/ustrajunior/code/ustrajunior/todos/lib/collections.js":1426781354554,"/Users/ustrajunior/code/ustrajunior/todos/client/head.html":1426781462810,"/Users/ustrajunior/code/ustrajunior/todos/client/templates/todos-item.js":1426781469271,"/Users/ustrajunior/code/ustrajunior/todos/client/templates/todos-item.html":1426781494352,"/Users/ustrajunior/code/ustrajunior/todos/client/templates/app-body.html":1426781649802,"/Users/ustrajunior/code/ustrajunior/todos/client/templates/app-body.js":1426781654909},"metrics":{"sessionLength":51712},"tree-view":{"directoryExpansionStates":{"/Users/ustrajunior/code/ustrajunior/todos":{"isExpanded":true,"entries":{".meteor":{"isExpanded":false,"entries":{}},"client":{"isExpanded":true,"entries":{"lib":{"isExpanded":false,"entries":{}},"stylesheets":{"isExpanded":false,"entries":{}},"templates":{"isExpanded":true,"entries":{}}}},"lib":{"isExpanded":true,"entries":{}},"public":{"isExpanded":false,"entries":{}},"resources":{"isExpanded":false,"entries":{}},"server":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/ustrajunior/code/ustrajunior/todos/client/templates/app-body.js","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}