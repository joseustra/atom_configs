{"mode":"editor","version":1,"windowDimensions":{"x":4,"y":23,"width":1362,"height":741,"maximized":true},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api"],"buffers":[{"text":"package models\n\nimport \"time\"\n\n// User the user\ntype User struct {\n\tID        int       `json:\"id\" gorm:\"column:id; primary_key:yes\"`\n\tUsername  string    `json:\"username\"`\n\tCreatedAt time.Time `json:\"createdAt\"`\n}\n\n//FindUserOrCreate search an user by username and if not found, create the user\nfunc FindUserOrCreate(username string) (err error) {\n\tvar user User\n\tquery := database.Where(User{Username: username}).FirstOrCreate(&user)\n\treturn query.Error\n}\n","markers":{"markers":{"1":{"id":1,"range":[[13,14],[13,14]],"tailed":false,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":180,"goalBufferRange":null,"preserveFolds":true,"goalScreenRange":null},"deserializer":"Marker"},"122":{"id":122,"range":[[13,0],[13,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"123":{"id":123,"range":[[13,0],[13,0]],"tailed":true,"reversed":false,"valid":false,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History","version":1},"encoding":"utf8","filePath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/models/user.go","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"b3a668d077c867b9b7cbd46a0e50dbe13df5bece","deserializer":"TextBuffer"},{"text":"package mk\n\nimport (\n\t\"bytes\"\n\t\"errors\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"net/url\"\n\t\"regexp\"\n\t\"strings\"\n\n\t\"code.nextbit.com.br/sw_nordestao_api/models\"\n\n\t\"github.com/Sirupsen/logrus\"\n)\n\nvar log = logrus.New()\n\n// MerakiResponse - mapping the meraki response\ntype MerakiResponse struct {\n\tLocation []string\n}\n\n// MerakiLogin - authenticate on meraki\nfunc MerakiLogin(loginURL, username string) error {\n\tvar msgError string\n\tif len(loginURL) == 0 {\n\t\treturn errors.New(\"try_reload\")\n\t}\n\n\tDefaultTransport := &http.Transport{}\n\tradCheck := models.LoadCreateRadCheck(username)\n\tif len(radCheck.Username) > 0 {\n\t\turlstr, _ := url.QueryUnescape(loginURL)\n\n\t\tb := url.Values{\"username\": {radCheck.Username}, \"password\": {radCheck.Value}}\n\t\treq, _ := http.NewRequest(\"POST\", urlstr, bytes.NewBufferString(b.Encode()))\n\n\t\tresp, _ := DefaultTransport.RoundTrip(req)\n\t\tdefer resp.Body.Close()\n\t\tcontents, err := ioutil.ReadAll(resp.Body)\n\t\tif err != nil {\n\t\t\tlog.Printf(\"%s\", err)\n\t\t}\n\n\t\tmsgError = haveErrors(string(contents))\n\t} else {\n\t\tmsgError = \"try_reload\"\n\t}\n\treturn errors.New(msgError)\n}\n\nfunc haveErrors(respBody string) (msgError string) {\n\tr := regexp.MustCompile(`error_message=(?P<msg>.*?)(\\s\\d|&)`)\n\n\tunscapedURL, _ := url.QueryUnescape(respBody)\n\tmatch := r.FindStringSubmatch(unscapedURL)\n\tresult := make(map[string]string)\n\n\tif len(match) > 0 {\n\t\tfor i, name := range r.SubexpNames() {\n\t\t\tresult[name] = match[i]\n\t\t}\n\t\tmsgError = strings.ToLower(strings.Replace(result[\"msg\"], \" \", \"\", -1))\n\t}\n\treturn\n}\n","markers":{"markers":{"1":{"id":1,"range":[[46,9],[46,9]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":200,"goalBufferRange":null,"preserveFolds":true,"goalScreenRange":null},"deserializer":"Marker"},"2":{"id":2,"range":[[46,8],[46,9]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"3":{"id":3,"range":[[48,1],[48,2]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"10":{"id":10,"range":[[46,8],[46,9]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"11":{"id":11,"range":[[48,1],[48,2]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"12":{"id":12,"range":[[46,8],[46,9]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"13":{"id":13,"range":[[48,1],[48,2]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"14":{"id":14,"range":[[46,8],[46,9]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"15":{"id":15,"range":[[48,1],[48,2]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History","version":1},"encoding":"utf8","filePath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/meraki/meraki.go","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"0e01a56fd5e593b137f35f3b03da2cf63b797016","deserializer":"TextBuffer"},{"text":"package models\n\nimport (\n\t\"time\"\n\n\t\"code.nextbit.com.br/sw_nordestao_api/utils\"\n)\n\n// A Session is defined when the user starting using the Internet\ntype Session struct {\n\tSessionID string `gorm:\"column:session_id\"`\n\tStartTime time.Time\n\tEndTime   time.Time\n\tUsername  string\n\tUseragent string\n}\n\n// SaveSession save the user session\nfunc SaveSession(username, useragent string) string {\n\tvar session Session\n\tsession.SessionID = utils.RandString()\n\tsession.StartTime = time.Now()\n\tsession.Username = username\n\tsession.Useragent = useragent\n\n\tdatabase.Create(&session)\n\treturn session.SessionID\n}\n\n// LoadSession loads a existing session.\nfunc LoadSession(sessionID string) Session {\n\tvar session Session\n\tdatabase.Where(\"session_id = ?\", sessionID).First(&session)\n\treturn session\n}\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":204,"preserveFolds":true,"goalScreenRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History","version":1},"encoding":"utf8","filePath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/models/session.go","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"737896dc8d1d9d365f3bf500bbaf89df09181636","deserializer":"TextBuffer"},{"text":"package auth\n\nimport (\n\t\"encoding/json\"\n\t\"net/http\"\n\n\t\"code.nextbit.com.br/sw_nordestao_api/apiresp\"\n\n\t\"github.com/Sirupsen/logrus\"\n)\n\nvar log = logrus.New()\n\ntype Authentication struct {\n\tSessionID   string `json:\"session_id,omitempty\"`\n\tUsername    string `json:\"username,omitempty\"`\n\tUserAgent   string `json:\"user_agent,omitempty\"`\n\tLoginURL    string `json:\"login_url\"`\n\tSessionTime string `json:\"session_time,omitempty\"`\n}\n\ntype AuthenticationJSON struct {\n\tAuthentication Authentication `json:\"user\"`\n}\n\nfunc AuthenticationHandler(res http.ResponseWriter, req *http.Request) {\n\tlog.WithFields(logrus.Fields{\"where\": \"auth\"}).Info(\"Starting authentication\")\n\n\tvar authenticationJSON AuthenticationJSON\n\n\terr := json.NewDecoder(req.Body).Decode(&authenticationJSON)\n\tif err != nil {\n\t\tlog.WithFields(logrus.Fields{\"where\": \"auth\", \"error\": \"json.NewDecoder\"}).Error(err.Error())\n\t}\n\n\tc := make(chan apiresp.ApiResponse)\n\n\tauthentication := authenticationJSON.Authentication\n\tgo authorization(authentication, res, c)\n\tar := <-c\n\tres.WriteHeader(ar.StatusCode)\n\tres.Write(ar.Message)\n\tlog.WithFields(logrus.Fields{\"where\": \"auth\"}).Info(\"Finishing authentication\")\n}\n\nfunc ReAuthenticationHandler(res http.ResponseWriter, req *http.Request) {\n\tlog.WithFields(logrus.Fields{\"where\": \"auth\"}).Info(\"Starting re-authentication\")\n\n\tvar authenticationJSON AuthenticationJSON\n\n\terr := json.NewDecoder(req.Body).Decode(&authenticationJSON)\n\tif err != nil {\n\t\tlog.WithFields(logrus.Fields{\"where\": \"auth\", \"error\": \"json.NewDecoder\"}).Error(err.Error())\n\t}\n\n\tc := make(chan apiresp.ApiResponse)\n\n\tauthentication := authenticationJSON.Authentication\n\tgo reAuthorization(authentication, res, c)\n\tar := <-c\n\tres.WriteHeader(ar.StatusCode)\n\tres.Write(ar.Message)\n\tlog.WithFields(logrus.Fields{\"where\": \"auth\"}).Info(\"Finishing re-authentication\")\n}\n","markers":{"markers":{"1":{"id":1,"range":[[43,1],[43,1]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":222,"goalScreenRange":null,"preserveFolds":true},"deserializer":"Marker"},"2":{"id":2,"range":[[43,0],[43,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"3":{"id":3,"range":[[25,71],[25,72]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"10":{"id":10,"range":[[43,0],[43,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"11":{"id":11,"range":[[25,71],[25,72]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"12":{"id":12,"range":[[43,0],[43,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"13":{"id":13,"range":[[25,71],[25,72]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History","version":1},"encoding":"utf8","filePath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/auth/authentication.go","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"6be1e3ea2275cb6649fe9107379d75beb61b7eba","deserializer":"TextBuffer"},{"text":"package main\n\nimport (\n\t\"encoding/json\"\n\t\"net/http\"\n\t\"os\"\n\n\t\"code.nextbit.com.br/sw_nordestao_api/auth\"\n\t\"code.nextbit.com.br/sw_nordestao_api/configs\"\n\t\"code.nextbit.com.br/sw_nordestao_api/server\"\n\n\tlog \"github.com/Sirupsen/logrus\"\n\n\t\"github.com/gorilla/mux\"\n)\n\nconst (\n\tStatusContinue           = 100\n\tStatusSwitchingProtocols = 101\n\n\tStatusOK                   = 200\n\tStatusCreated              = 201\n\tStatusAccepted             = 202\n\tStatusNonAuthoritativeInfo = 203\n\tStatusNoContent            = 204\n\tStatusResetContent         = 205\n\tStatusPartialContent       = 206\n\n\tStatusMultipleChoices   = 300\n\tStatusMovedPermanently  = 301\n\tStatusFound             = 302\n\tStatusSeeOther          = 303\n\tStatusNotModified       = 304\n\tStatusUseProxy          = 305\n\tStatusTemporaryRedirect = 307\n\n\tStatusBadRequest                   = 400\n\tStatusUnauthorized                 = 401\n\tStatusPaymentRequired              = 402\n\tStatusForbidden                    = 403\n\tStatusNotFound                     = 404\n\tStatusMethodNotAllowed             = 405\n\tStatusNotAcceptable                = 406\n\tStatusProxyAuthRequired            = 407\n\tStatusRequestTimeout               = 408\n\tStatusConflict                     = 409\n\tStatusGone                         = 410\n\tStatusLengthRequired               = 411\n\tStatusPreconditionFailed           = 412\n\tStatusRequestEntityTooLarge        = 413\n\tStatusRequestURITooLong            = 414\n\tStatusUnsupportedMediaType         = 415\n\tStatusRequestedRangeNotSatisfiable = 416\n\tStatusExpectationFailed            = 417\n\tStatusTeapot                       = 418\n\n\tStatusInternalServerError     = 500\n\tStatusNotImplemented          = 501\n\tStatusBadGateway              = 502\n\tStatusServiceUnavailable      = 503\n\tStatusGatewayTimeout          = 504\n\tStatusHTTPVersionNotSupported = 505\n)\n\nvar (\n\tglobalConfiguration *config.Configuration = new(config.Configuration)\n)\n\nfunc init() {\n\tloadConfiguration()\n}\n\nfunc main() {\n\trouter := mux.NewRouter()\n\n\t//Users - user.go\n\trouter.HandleFunc(\"/v1/user/login\", addDefaultHeaders(auth.AuthenticationHandler)).Methods(\"POST\")\n\trouter.HandleFunc(\"/v1/user/relogin\", addDefaultHeaders(auth.ReAuthenticationHandler)).Methods(\"POST\")\n\n\t//For Access-Control-Allow-Origin\n\trouter.HandleFunc(`/{rest:[a-zA-Z0-9=\\-\\/]+}`, AllowHeaders).Methods(\"OPTIONS\")\n\n\thttp.Handle(\"/api/\", router)\n\thttp.Handle(\"/\", router)\n\n\tserver.Start(globalConfiguration, router)\n}\n\nfunc AllowHeaders(res http.ResponseWriter, req *http.Request) {\n\tres.Header().Set(\"Access-Control-Allow-Origin\", \"*\")\n\tres.Header().Set(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\")\n\tres.Header().Set(\"Accept\", \"application/vnd.superwifi.net.br; version=1;\")\n}\n\nfunc addDefaultHeaders(fn http.HandlerFunc) http.HandlerFunc {\n\treturn func(w http.ResponseWriter, r *http.Request) {\n\t\tw.Header().Set(\"Content-Type\", \"application/json; charset=utf-8\")\n\t\tw.Header().Set(\"Accept\", \"application/vnd.superwifi.net.br; version=1;\")\n\t\tw.Header().Set(\"Access-Control-Allow-Origin\", \"*\")\n\t\tfn(w, r)\n\t}\n}\n\nfunc loadConfiguration() {\n\tconfigFilePath := \"configs/main.conf\"\n\n\tlog.WithFields(log.Fields{\"where\": \"superwifi\"}).Infof(\"starting %s load\", configFilePath)\n\tconfigFile, err := os.Open(configFilePath)\n\tif err != nil {\n\t\tlog.WithFields(log.Fields{\"where\": \"superwifi\", \"error\": \"os.Open(configFilePath)\"}).Error(err.Error())\n\t\tos.Exit(1)\n\t}\n\n\tconfigDecoder := json.NewDecoder(configFile)\n\terr = configDecoder.Decode(&globalConfiguration)\n\tif err != nil {\n\t\tlog.WithFields(log.Fields{\"where\": \"superwifi\", \"error\": \"configDecoder\"}).Error(err.Error())\n\t\tos.Exit(1)\n\t}\n\n\tlog.WithFields(log.Fields{\"where\": \"superwifi\"}).Infof(\"finished %s load\", configFilePath)\n}\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":234,"preserveFolds":true,"goalScreenRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History","version":1},"encoding":"utf8","filePath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/nordestao.go","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"748884b438d88c92e35b5c68ba4e84d25046f6c7","deserializer":"TextBuffer"},{"text":"package ws\n\nimport (\n\t\"net/http\"\n\t\"strings\"\n\n\t\"code.nextbit.com.br/sw_nordestao_api/emails\"\n\n\t\"github.com/Sirupsen/logrus\"\n)\n\nvar log = logrus.New()\n\ntype WebServiceResponse struct {\n\tAuthorized  bool   `json:\"authorized\"`\n\tSessiontime string `json:\"session_time,omityempty\"`\n\tMessage     string `json:\"message,omityempty\"`\n}\n\nfunc UserFromWebservice(username string) WebServiceResponse {\n\tresponse, _ := http.Get(\"http://189.43.134.18:8091/vm_visualcupom_ws/br/com/visualmix/visualcupom/webservice/responde.jsp?acao=pesquisar_cpf&mensagem=\" + username)\n\n\tvar wsResponse WebServiceResponse\n\tresp := readHttpBody(response)\n\n\tauthorized, msg := isAuthorized(resp)\n\tif authorized {\n\t\twsResponse.Authorized = true\n\t\twsResponse.Sessiontime = \"120\"\n\t} else {\n\t\twsResponse.Authorized = false\n\t\twsResponse.Sessiontime = \"\"\n\t\twsResponse.Message = msg\n\t}\n\n\treturn wsResponse\n}\n\nfunc isAuthorized(resp string) (authorized bool, msg string) {\n\targs := strings.Split(resp, \"|\")[0:3]\n\tvar code string\n\tcode = strings.Join(args, \"\")\n\n\tif strings.TrimSpace(code) == \"R001\" {\n\t\tauthorized = true\n\t} else if strings.TrimSpace(code) == \"R000\" {\n\t\tauthorized = false\n\t\tmsg = \"cpf_not_found\"\n\t} else {\n\t\tauthorized = false\n\t\tmsg = \"server_error\"\n\t\tgo emails.SendWsErrorMail(resp)\n\t}\n\treturn\n}\n\nfunc readHttpBody(response *http.Response) string {\n\tbodyBuffer := make([]byte, 500)\n\tvar str string\n\tcount, err := response.Body.Read(bodyBuffer)\n\n\tfor ; count > 0; count, err = response.Body.Read(bodyBuffer) {\n\t\tif err != nil {\n\t\t}\n\t\tstr += string(bodyBuffer[:count])\n\t}\n\treturn str\n}\n","markers":{"markers":{"1":{"id":1,"range":[[10,0],[10,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":254,"goalScreenRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History","version":1},"encoding":"utf8","filePath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/webservice/webservice.go","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"118eb41dade73e957f915b43bc537586fdddc841","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":180,"softTabs":false,"displayBuffer":{"id":181,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/models/user.go","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":204,"softTabs":false,"displayBuffer":{"id":205,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/models/session.go","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":200,"softTabs":false,"displayBuffer":{"id":201,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/meraki/meraki.go","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":222,"softTabs":false,"displayBuffer":{"id":223,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/auth/authentication.go","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":234,"softTabs":false,"displayBuffer":{"id":235,"softWrapped":true,"editorWidthInChars":null,"scrollTop":1935,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/nordestao.go","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":254,"softTabs":false,"displayBuffer":{"id":255,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/webservice/webservice.go","invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/webservice/webservice.go","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-go","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/models/user.go":1427805274717,"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/models/session.go":1429102749613,"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/meraki/meraki.go":1427805609180,"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/auth/authentication.go":1428709912665,"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/nordestao.go":1429102751179,"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/webservice/webservice.go":1429102786263},"metrics":{"sessionLength":84187738},"tree-view":{"directoryExpansionStates":{"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api":{"isExpanded":true,"entries":{".elasticbeanstalk":{"isExpanded":false,"entries":{}},".git":{"isExpanded":false,"entries":{}},"apiresp":{"isExpanded":true,"entries":{}},"auth":{"isExpanded":true,"entries":{}},"configs":{"isExpanded":false,"entries":{}},"emails":{"isExpanded":false,"entries":{}},"Godeps":{"isExpanded":false,"entries":{}},"meraki":{"isExpanded":false,"entries":{}},"models":{"isExpanded":true,"entries":{}},"password_salt":{"isExpanded":false,"entries":{}},"radcheck":{"isExpanded":true,"entries":{}},"server":{"isExpanded":false,"entries":{}},"session":{"isExpanded":false,"entries":{}},"utils":{"isExpanded":false,"entries":{}},"validations":{"isExpanded":false,"entries":{}},"webservice":{"isExpanded":true,"entries":{}}}}},"selectedPath":"/Users/ustrajunior/code/go/src/code.nextbit.com.br/sw_nordestao_api/webservice/webservice.go","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["tente recarregar","tente reca","Tente reca","try_reload","loginURL","SendWsErrorMail","MustCompile","Starting authentication"],"replaceHistory":[],"pathsHistory":[]},"keybinding-resolver":{}}}